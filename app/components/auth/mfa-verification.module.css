/* Use form component .modalOverlay class */

/* Use form component .modal class */

.title {
  text-align: center;
  color: var(--textTitle);
  margin-bottom: var(--spaceXL);
  font-size: var(--fontSizeH4);
}

.hintSelection {
  margin-bottom: var(--spaceL);
}

.label {
  display: block;
  margin-bottom: var(--spaceS);
  font-weight: 600;
  color: var(--textBody);
}

.select {
  width: 100%;
  padding: var(--spaceM);
  border: 1.5px solid color-mix(in lab, var(--text) 20%, transparent);
  border-radius: var(--spaceXS);
  font-size: var(--fontSizeBodyM);
  background: white;
  transition: border-color var(--durationS) var(--bezierFastoutSlowin);
  box-sizing: border-box;
}

.select:focus {
  outline: none;
  border-color: var(--primary);
  box-shadow: 0 0 0 2px color-mix(in lab, var(--primary) 25%, transparent);
}

.description {
  text-align: center;
  color: var(--textLight);
  margin-bottom: var(--spaceL);
  line-height: 1.5;
}

.errorMessage {
  background: linear-gradient(135deg, 
    color-mix(in lab, var(--error) 12%, transparent),
    color-mix(in lab, var(--error) 8%, transparent)
  );
  border: 1px solid color-mix(in lab, var(--error) 30%, transparent);
  border-left: 4px solid var(--error);
  color: color-mix(in lab, var(--error) 90%, var(--black));
  padding: var(--spaceL);
  border-radius: var(--spaceS);
  font-size: var(--fontSizeBodyS);
  margin-bottom: var(--spaceL);
  text-align: left;
  line-height: 1.4;
  position: relative;
  overflow: hidden;
  box-shadow: 0 4px 16px color-mix(in lab, var(--text) 10%, transparent);
  animation: slideInError var(--durationM) var(--bezierFastoutSlowin);
}

.errorMessage::before {
  content: '';
  position: absolute;
  top: 0;
  left: 0;
  right: 0;
  height: 2px;
  background: linear-gradient(90deg, var(--error), color-mix(in lab, var(--error) 60%, transparent));
  animation: shimmer 2s ease-in-out infinite;
}

.errorMessage:empty {
  display: none;
}

/* Use form component .input class */

/* Use form component .button .buttonPrimary classes */

.buttons {
  display: flex;
  flex-direction: column;
  gap: var(--spaceS);
}

/* Use form component .button .buttonSecondary classes */

.actions {
  margin-top: var(--spaceL);
  text-align: center;
}

.cancelButton {
  padding: var(--spaceS) var(--spaceL);
  border: none;
  background: transparent;
  cursor: pointer;
  font-size: var(--fontSizeBodyS);
  color: var(--textLight);
  transition: color var(--durationS) var(--bezierFastoutSlowin);
}

.cancelButton:hover {
  color: var(--textBody);
}

.signOutContainer {
  margin-top: var(--spaceL);
  padding-top: var(--spaceL);
  border-top: 1px solid var(--borderLight);
  text-align: center;
}

.signOutText {
  color: var(--textLight);
  font-size: var(--fontSizeSmall);
  margin-bottom: var(--spaceM);
}

.sendCode,
.verifyCode {
  text-align: center;
}

#recaptcha-container {
  margin-top: var(--spaceM);
}

/* Animations */
@keyframes slideInError {
  from {
    opacity: 0;
    transform: translateY(calc(-1 * var(--spaceM))) scaleY(0.8);
    max-height: 0;
    padding-top: 0;
    padding-bottom: 0;
    margin-top: 0;
    margin-bottom: 0;
  }
  to {
    opacity: 1;
    transform: translateY(0) scaleY(1);
    max-height: 200px;
    padding-top: var(--spaceL);
    padding-bottom: var(--spaceL);
    margin-top: 0;
    margin-bottom: var(--spaceL);
  }
}

@keyframes shimmer {
  0%, 100% {
    opacity: 0.6;
    transform: translateX(-100%);
  }
  50% {
    opacity: 1;
    transform: translateX(100%);
  }
}

/* Reduce motion for accessibility */
@media (prefers-reduced-motion: reduce) {
  .errorMessage {
    animation: none;
  }
  
  .errorMessage::before {
    animation: none;
  }
}
